/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package designerjsokoban;

import java.awt.Cursor;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Point;
import java.awt.RenderingHints;
import java.awt.Toolkit;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JToggleButton;

/**
 *
 * @author gusta
 */
public class Designer extends javax.swing.JFrame {

    //Tamanio de Cada Recuadro
    int TAMANIO_IMAGEN = 25;
    int MIN_X = 75;
    int MIN_Y = 20;

    private boolean borradorActivo = false;

    //Posicion donde se situa el Cursor
    int posX = -1;
    int posY = -1;

    //Posicion en Matriz
    int posMI = -1;
    int posMJ = -1;

    //Equivale a 800 x 600
    Character[][] matrizLienzo = new Character[32][25];

    int maxMatrizI = -1;
    int maxMatrizJ = -1;

    boolean pintarPared = false;

    Image paredIMG;
    Image avatarIMG;
    Image cajaIMG;
    Image destinoIMG;

    Image dibujar;

    JToggleButton JToggleActual;
    
    
    Character letra;

    /**
     * Creates new form Designer
     */
    public Designer() {
        initComponents();
        setLocationRelativeTo(null);
        inicializarImagenes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinnerCols = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSpinnerFilas = new javax.swing.JSpinner();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        bPared = new javax.swing.JToggleButton();
        bAvatar = new javax.swing.JToggleButton();
        bCaja = new javax.swing.JToggleButton();
        bDestino = new javax.swing.JToggleButton();
        bBorrar = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jSpinnerCols.setModel(new javax.swing.SpinnerNumberModel(20, 20, 50, 1));

        jLabel1.setText("Tama√±o Tablero");

        jLabel2.setText("X");

        jSpinnerFilas.setModel(new javax.swing.SpinnerNumberModel(20, 20, 50, 1));

        jButton1.setText("Generar Tablero");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        bPared.setText("Pared");
        bPared.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bParedActionPerformed(evt);
            }
        });

        bAvatar.setText("Avatar");
        bAvatar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAvatarActionPerformed(evt);
            }
        });

        bCaja.setText("Caja");
        bCaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCajaActionPerformed(evt);
            }
        });

        bDestino.setText("Punto");
        bDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDestinoActionPerformed(evt);
            }
        });

        bBorrar.setText("B");
        bBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBorrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(3, 3, 3)
                        .addComponent(jSpinnerFilas, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerCols, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(53, 53, 53)
                        .addComponent(bPared, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bAvatar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bCaja, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(bBorrar)
                        .addGap(0, 2, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinnerCols, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jSpinnerFilas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(bPared)
                    .addComponent(bAvatar)
                    .addComponent(bCaja)
                    .addComponent(bDestino)
                    .addComponent(bBorrar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(534, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //dibujarTablero = true;
        //generarCuadricula((Graphics2D) getGraphics());
        System.out.println("Matriz de N Filas " + maxMatrizI);
        System.out.println("Matriz de N Columnas " + maxMatrizJ);
        
        Character[][] mapaChar = new Character[maxMatrizJ+1][maxMatrizI+1];
        
        System.out.println("mapaChar = " + mapaChar.length);
        System.out.println("mapaChar = " + mapaChar[0].length);
        
        for (int i = 0; i < mapaChar.length; i++) {
            for (int j = 0; j < mapaChar[i].length; j++) {
                mapaChar[i][j] = matrizLienzo[i][j] == null ? 'V' : matrizLienzo[i][j];
            }          
        }
        
        for (int i = 0; i < mapaChar.length; i++) {
            for (int j = 0; j < mapaChar[i].length; j++) {
                System.out.print(mapaChar[i][j] + "\t");
            }
            System.out.println("");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        Point locationOnScreen = evt.getPoint();

        posX = locationOnScreen.x;
        posY = locationOnScreen.y;

        posMI = (posX - 20) / 25;
        posMJ = (posY - 75) / 25;

        System.out.println("X = " + locationOnScreen.x);
        System.out.println("Y = " + locationOnScreen.y);

        System.out.println("Ubicacion Matrix i " + (posX - 20) / 25);
        System.out.println("Ubicacion Matrix j " + (posY - 75) / 25);

        //pintarCuadro((Graphics2D) getGraphics());
        if (dibujar != null) {
            dibujarObjeto((Graphics2D) getGraphics(), dibujar);
        }
        
        if (borradorActivo){
            borrarObjeto((Graphics2D) getGraphics());
        }

        if (posMI > maxMatrizI) {
            maxMatrizI = posMI;
        }

        if (posMJ > maxMatrizJ) {
            maxMatrizJ = posMJ;
        }
    }//GEN-LAST:event_formMouseClicked

    private void bParedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bParedActionPerformed
        seleccionToggleButtons(bPared, paredIMG,'M');
    }//GEN-LAST:event_bParedActionPerformed

    private void bAvatarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAvatarActionPerformed
        seleccionToggleButtons(bAvatar, avatarIMG,'A');
    }//GEN-LAST:event_bAvatarActionPerformed

    private void bCajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCajaActionPerformed
        seleccionToggleButtons(bCaja, cajaIMG,'C');
    }//GEN-LAST:event_bCajaActionPerformed

    private void bDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDestinoActionPerformed
        seleccionToggleButtons(bDestino, destinoIMG,'D');
    }//GEN-LAST:event_bDestinoActionPerformed

    private void bBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBorrarActionPerformed
        if (bBorrar.isSelected()) {
            if (JToggleActual != null) {
                JToggleActual.setSelected(false);
            }
            dibujar = null;
            JToggleActual = bBorrar;

            borradorActivo = true;

        } else {
            borradorActivo = false;
        }
    }//GEN-LAST:event_bBorrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Designer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Designer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Designer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Designer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Designer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton bAvatar;
    private javax.swing.JToggleButton bBorrar;
    private javax.swing.JToggleButton bCaja;
    private javax.swing.JToggleButton bDestino;
    private javax.swing.JToggleButton bPared;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSpinner jSpinnerCols;
    private javax.swing.JSpinner jSpinnerFilas;
    // End of variables declaration//GEN-END:variables

    @Override
    public void paint(Graphics g) {
        super.paint(g);
        Graphics2D g2d = (Graphics2D) g;
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
                RenderingHints.VALUE_ANTIALIAS_ON);

    }

    private void borrarObjeto(Graphics2D g2) {        
        g2.clearRect((posMI * 25) + 20, (posMJ * 25) + 75, 25, 25);
        matrizLienzo[posMI][posMJ] = null;
    }

    private void dibujarObjeto(Graphics2D g2, Image dibujar) {
        g2.drawImage(dibujar, (posMI * 25) + 20, (posMJ * 25) + 75, 25, 25, this);
        matrizLienzo[posMJ][posMI] = letra;
    }

    private void pintarPared(Graphics2D g2) {
        g2.drawImage(paredIMG, (posMI * 25) + 20, (posMJ * 25) + 75, 25, 25, this);
    }

    private void pintarCuadro(Graphics2D g2) {
        g2.drawRect((posMI * 25) + 20, (posMJ * 25) + 75, 25, 25);
    }

    private void generarCuadricula(Graphics2D g2) {
        System.out.println("Dibujar ...");

        int filas = Integer.valueOf(jSpinnerFilas.getValue().toString());
        int cols = Integer.valueOf(jSpinnerCols.getValue().toString());

        int alto = (filas * TAMANIO_IMAGEN) + 75;
        int ancho = (cols * TAMANIO_IMAGEN) + 20;

        for (int i = 0; i < filas; i++) {
            for (int j = 0; j < cols; j++) {
                // g2.drawLine(20+((i+1)*TAMANIO_IMAGEN), 75, 20+((i+1)*TAMANIO_IMAGEN),alto);
                //g2.drawLine(20, 75+((j+1)*TAMANIO_IMAGEN), ancho,75+((j+1)*TAMANIO_IMAGEN));
            }

        }

    }

    private void inicializarImagenes() {
        try {
            paredIMG = ImageIO.read(Designer.class.getResource("/pared.png"));
            avatarIMG = ImageIO.read(Designer.class.getResource("/avatar.png"));
            cajaIMG = ImageIO.read(Designer.class.getResource("/caja.png"));
            destinoIMG = ImageIO.read(Designer.class.getResource("/destino.png"));
        } catch (IOException ex) {
            Logger.getLogger(Designer.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void seleccionToggleButtons(JToggleButton boton, Image imagen , Character letra) {
        borradorActivo = false;
        if (boton.isSelected()) {
            if (JToggleActual != null) {
                JToggleActual.setSelected(false);
            }
            JToggleActual = boton;
            dibujar = imagen;
            this.letra = letra;
        } else {
            dibujar = null;
            this.letra = null;
        }
    }

}
